input {
    beats {
      type => beats
      port => 5044
    }
}
filter
{
    if [type] == 'application_logs'
	{
		json
		{
			source=> "message"
		}
	}
 	else if [type] == 'iis_logs'
 	{
 		if ([message] =~ /^#/)
     	{
     		drop{}
     	}
     	grok
     	{
     		match => ["message", "%{TIMESTAMP_ISO8601:log_timestamp}[ ]*%{IP:site}[ ]*%{WORD:method}%{SPACE}%{URIPATH:page}[ ]*%{NOTSPACE:querystring}[ ]*%{NOTSPACE:port}[ ]*%{NOTSPACE:username}[ ]*%{IP:clienthost}[ ]*%{NOTSPACE:useragent}[ ]*%{NOTSPACE:cs_referer}[ ]*%{INT:response}[ ]*%{INT:subresponse}[ ]*%{INT:scstatus}[ ]*%{INT:time_taken}"]
     	}

     	#Set the Event Timestamp from the log
     	date
     	{
     		match => [ "log_timestamp", "YYYY-MM-dd HH:mm:ss" ]
     		timezone => "UCT"
     	}

     	#add details for useragent
     	useragent
     	{
     		source=> "useragent"
     		prefix=> "browser"
     	}
    }
}
output
{
   	if [type] == 'application_logs'
	{
		elasticsearch
		{
			hosts => "nagdom.domain.com:9200"
			ssl => false
			index => "stack1-app-logs-%{+YYYY}"
		}
	}
	else if [type] == 'iis_logs'
	{
        elasticsearch
        {
            hosts => "nagdom.domain.com:9200"
          	ssl => false
        	index => "stack1-iis-logs-%{+YYYY}"
        }
	}
}